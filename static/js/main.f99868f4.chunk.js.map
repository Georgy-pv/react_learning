{"version":3,"sources":["serviceWorker.js","components/Feed/Feed.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/BestFriends/BestFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspenseComponent.jsx","App.js","index.js","components/Header/Header.module.css","redux/auth-reducer.js","components/Navbar/BestFriends/BestFriends.module.css","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js","components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","assads/image/loader.svg","API/API.jsx"],"names":["Boolean","window","location","hostname","match","Feed","props","Music","Settings","BestFriends","className","classes","friend","src","imgSrc","alt","name","Navbar","nav","activeClassName","active","item","to","bestfriends","friendElements","NavbarContainer","connect","state","sidebar","map","f","img","Header","header","logo","right","loginBlock","isAuth","logoutBtn","onClick","logout","auth","login","HeaderAPIContainer","this","React","Component","HeaderContainer","initialState","initialized","appReducer","action","type","id","sidebarReducer","reducersPatch","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspenseComponent","fallback","DialogsContainer","lazy","ProfileContainer","Login","UsersContainer","App","initializeApp","path","render","component","Preloader","AppContainer","compose","withRouter","dispatch","promise","authMe","Promise","all","then","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports","SET_USER_DATA","userId","email","isFetching","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","password","rememberMe","messages","length","stopSubmit","_error","style","textAlign","loaderSrc","width","height","ADD_POST","postsData","likesCount","profile","status","addPostActionCreator","newPostText","setStatus","getUserProfileTC","usersAPI","profileDAL","getUserStatus","profileAPI","updateUserStatus","updateStatus","filter","p","postId","messagesData","dialogsData","sendMassegeActionCreator","newMessageText","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","users","pageSize","totalUsersCount","currentPage","fetchFollowing","followSuccess","unFollowSuccess","setCurrentPage","page","setIsFetching","toggleFetchFollowing","getUsers","getUsersDAL","totalCount","followUnfollowFlow","apiMethod","actionCreator","unFollowTC","unFollowDAL","bind","followTC","followDAL","followed","axiosInstance","axios","baseURL","withCredentials","headers","get","post","delete","warn","put"],"mappings":"mRAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sGCPSC,G,OARF,SAACC,GACV,OACI,uCCMOC,G,OARD,SAACD,GACX,OACI,wCCMOE,G,OARE,SAACF,GACd,OACI,2C,iBCWOG,EAXK,SAACH,GAEjB,OACG,yBAAKI,UAAWC,IAAQC,QACpB,yBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,KAC5B,yBAAKL,UAAWC,IAAQK,MAClBV,EAAMU,Q,gBCSRC,EAdA,SAACX,GACZ,OACI,yBAAKI,UAAWC,IAAQO,KACpB,kBAAC,IAAD,CAASC,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,YAAtE,WACA,kBAAC,IAAD,CAASH,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,YAAtE,YACA,kBAAC,IAAD,CAASH,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,SAAtE,QACA,kBAAC,IAAD,CAASH,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,UAAtE,SACA,kBAAC,IAAD,CAASH,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,aAAtE,WACA,kBAAC,IAAD,CAASH,gBAAiBR,IAAQS,OAAQV,UAAWC,IAAQU,KAAMC,GAAG,UAAtE,SACA,yBAAKZ,UAAWC,IAAQY,aACnBjB,EAAMkB,kB,QCcRC,EAFSC,aAfF,SAACC,GACnB,MAAM,CACFH,eAAgBG,EAAMC,QAAQL,YAAYM,KAAI,SAACC,GAC3C,OAAO,kBAAC,EAAD,CAAad,KAAMc,EAAEd,KAAMF,OAAQgB,EAAEC,aAK/B,WACrB,MAAO,KAMaL,CAA6CT,G,iBCDtDe,EAtBA,SAAC1B,GACZ,OACI,4BAAQI,UAAWC,IAAQsB,QACvB,yBAAKvB,UAAWC,IAAQuB,KAAMrB,IAAI,uFAClC,yBAAKH,UAAWC,IAAQwB,OACpB,yBAAKzB,UAAWC,IAAQyB,YACnB9B,EAAM+B,OACP,yBAAK3B,UAAU,IACX,4BAAQA,UAAWC,IAAQ2B,UAAWC,QAASjC,EAAMkC,QAArD,UACA,0BAAM9B,UAAWC,IAAQ8B,MAAOnC,EAAMoC,QAE1C,kBAAC,IAAD,CAASpB,GAAI,UAAU,4C,QCTrCqB,E,uKAGE,OAAO,kBAAC,EAAWC,KAAKtC,W,GAHCuC,IAAMC,WAc1BC,EAAkBrB,aAPT,SAACC,GACnB,MAAM,CACFU,OAAQV,EAAMc,KAAKJ,OACnBK,MAAOf,EAAMc,KAAKC,SAI6B,CACnDF,YAD2Bd,CAE5BiB,G,eCjBCK,EAAe,CACfC,aAAa,GAgCFC,EA7BI,WAAmC,IAAlCvB,EAAiC,uDAAzBqB,EAAcG,EAAW,uCACjD,OAAOA,EAAOC,MACV,IAVgB,sBAWZ,kCACOzB,GADP,IAEIsB,aAAa,IAErB,QACI,OAAOtB,I,wBCjBdqB,EAAe,CAChBzB,YAAY,CACR,CAAC8B,GAAG,EAAGrC,KAAM,OAAQe,IAAK,yEAC1B,CAACsB,GAAG,EAAGrC,KAAM,WAAYe,IAAK,oGAC9B,CAACsB,GAAG,EAAGrC,KAAM,OAAQe,IAAK,yGASnBuB,EALQ,WAAiC,IAAhC3B,EAA+B,uDAAzBqB,EAAyB,iCAEnD,OAAOrB,G,wBCDP4B,EAAgBC,YAAgB,CAChCC,YAAaC,IACbC,YAAaC,IACbhC,QAAS0B,EACTO,UAAWC,IACXrB,KAAMsB,IACNC,KAAMC,IACNC,IAAKhB,IAILiB,EAAQC,YAAYb,EAAec,YAAgBC,MACvDrE,OAAOkE,MAAQA,EACAA,QCrBFI,EAAwB,SAACzB,GAClC,OAAO,SAACxC,GACJ,OAAM,kBAAC,WAAD,CAAUkE,SAAU,4CAC1B,kBAAC1B,EAAcxC,MCYjBmE,EAAmB5B,IAAM6B,MAAK,kBAAM,uDACpCC,EAAmB9B,IAAM6B,MAAK,kBAAM,uDACpCE,EAAQ/B,IAAM6B,MAAK,kBAAM,uDACzBG,EAAiBhC,IAAM6B,MAAK,kBAAM,iCAKlCI,E,kLAGElC,KAAKtC,MAAMyE,kB,+BAIX,OAAKnC,KAAKtC,MAAM2C,YAKZ,yBAAKvC,UAAU,eACX,kBAACqC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKrC,UAAU,wBACX,kBAAC,IAAD,CAAOsE,KAAK,oBAAoBC,OAAQV,EAAsBI,KAC9D,kBAAC,IAAD,CAAOK,KAAK,WAAWC,OAAQV,EAAsBE,KACrD,kBAAC,IAAD,CAAOO,KAAK,QAAQE,UAAW7E,IAC/B,kBAAC,IAAD,CAAO2E,KAAK,SAASE,UAAW3E,IAChC,kBAAC,IAAD,CAAOyE,KAAK,YAAYE,UAAW1E,IACnC,kBAAC,IAAD,CAAOwE,KAAK,SAASC,OAAQV,EAAsBM,KACnD,kBAAC,IAAD,CAAOG,KAAK,SAASC,OAAQV,EAAsBK,OAdpD,kBAACO,EAAA,EAAD,U,GARDtC,IAAMC,WAoCpBsC,EAAeC,YACfC,IACA5D,aARoB,SAACC,GACrB,MAAO,CACHsB,YAAatB,EAAMuC,IAAIjB,eAMF,CAAE8B,cJlCF,kBAAM,SAACQ,GAChC,IAAIC,EAAUD,EAASE,eAEvBC,QAAQC,IAAI,CAACH,IAAUI,MAAK,WACxBL,EATG,CACHnC,KAvBgB,+BI2DLiC,CAGjBP,GAcae,EAZC,SAACvF,GACb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU6D,MAAOA,GAEb,kBAACiB,EAAD,SC/DhBU,IAASb,OACL,kBAAC,EAAD,MACAc,SAASC,eAAe,SdyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBP,MAAK,SAAAQ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBexI5BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,cAAgB,8BAA8B,YAAc,4BAA4B,WAAa,2BAA2B,UAAY,0BAA0B,KAAO,uB,wLCEnRC,EAAgB,qCAIlB5D,EAAe,CACf6D,OAAQ,KACRC,MAAO,KACPpE,MAAO,KACPL,QAAQ,EACR0E,YAAY,GAgBHC,EAAkB,SAACH,EAAQC,EAAOpE,EAAOL,GAClD,MAAO,CACHe,KAAMwD,EACNK,QAAS,CAACJ,SAAQC,QAAOpE,QAAOL,YAK3BoD,EAAS,WAClB,8CAAO,WAAOF,GAAP,uBAAA2B,EAAA,sEACkBC,IAAQC,KAD1B,OAG8B,KAF7BC,EADD,QAGUC,KAAKC,aAAmB,EACNF,EAASC,KAAKA,KAAnCjE,EAD0B,EAC1BA,GAAIyD,EADsB,EACtBA,MAAOpE,EADe,EACfA,MACjB6C,EAASyB,EAAgB3D,EAAIyD,EAAOpE,GAAO,KAL5C,2CAAP,uDAWSA,EAAQ,SAACoE,EAAOU,EAAUC,GACnC,8CAAO,WAAOlC,GAAP,iBAAA2B,EAAA,sEACkBC,IAAQzE,MAAMoE,EAAOU,EAAUC,GADjD,OAG8B,KAF7BJ,EADD,QAGUC,KAAKC,WACdhC,EAASE,MAELgB,EAAUY,EAASC,KAAKI,SAASC,OAAS,EAAIN,EAASC,KAAKI,SAAS,GAAK,aAC9EnC,EAASqC,YAAW,QAAS,CAACC,OAAQpB,MAPvC,2CAAP,uDAaSjE,EAAS,WAClB,8CAAO,WAAO+C,GAAP,SAAA2B,EAAA,sEACkBC,IAAQ3E,SAD1B,OAG8B,IAH9B,OAGU8E,KAAKC,YACdhC,EAASyB,EAAgB,KAAM,KAAM,MAAM,IAJ5C,2CAAP,uDAWWjD,IA3DK,WAAmC,IAAlCpC,EAAiC,uDAAzBqB,EAAcG,EAAW,uCAClD,OAAOA,EAAOC,MACV,KAAKwD,EACD,kCACOjF,GACAwB,EAAO8D,SAGlB,QACI,OAAOtF,K,mBCvBnB+E,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,gCCD9D,qCAOexB,IAJG,WACd,OAAO,yBAAK2C,MAAO,CAACC,UAAW,WAAW,yBAAKlH,IAAKmH,IAAWC,MAAM,QAAQC,OAAO,a,0NCFlFC,EAAW,mBAMbnF,EAAe,CACfoF,UAAW,CACP,CAAE/E,GAAI,EAAGoD,QAAS,sBAAuB4B,WAAY,IACrD,CAAEhF,GAAI,EAAGoD,QAAS,mBAAoB4B,WAAY,IAClD,CAAEhF,GAAI,EAAGoD,QAAS,gCAAiC4B,WAAY,IAC/D,CAAEhF,GAAI,EAAGoD,QAAS,iBAAkB4B,WAAY,IAChD,CAAEhF,GAAI,EAAGoD,QAAS,sCAAuC4B,WAAY,IACrE,CAAEhF,GAAI,EAAGoD,QAAS,mBAAoB4B,WAAY,IAClD,CAAEhF,GAAI,EAAGoD,QAAS,yBAA0B4B,WAAY,KAE5DC,QAAS,KACTC,OAAQ,IAkCCC,EAAuB,SAACC,GACjC,MAAO,CACHrF,KAAM+E,EACNM,gBAWKC,EAAY,SAACH,GACtB,MAAO,CACHnF,KAjEW,qBAkEXmF,WAcKI,EAAmB,SAAC9B,GAC7B,8CAAO,WAAOtB,GAAP,eAAA2B,EAAA,sEACkB0B,IAASC,WAAWhC,GADtC,OACCQ,EADD,OAGH9B,EA3BG,CACHnC,KA3DiB,2BA4DjBkF,QAyBwBjB,EAASC,OAH9B,2CAAP,uDAQSwB,EAAgB,SAACjC,GAC1B,8CAAO,WAAOtB,GAAP,eAAA2B,EAAA,sEACkB6B,IAAWD,cAAcjC,GAD3C,OACCQ,EADD,OAEH9B,EAASmD,EAAUrB,EAASC,OAFzB,2CAAP,uDAMS0B,EAAmB,SAACT,GAC7B,8CAAO,WAAOhD,GAAP,SAAA2B,EAAA,sEACkB6B,IAAWE,aAAaV,GAD1C,OAG8B,IAH9B,OAGUjB,KAAKC,YACdhC,EAASmD,EAAUH,IAJpB,2CAAP,uDAUW7E,IAzFQ,WAAmC,IAAlC/B,EAAiC,uDAAzBqB,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAK+E,EACD,IAAIM,EAActF,EAAOsF,YACzB,OAAO,2BACA9G,GADP,IAEIyG,UAAU,GAAD,mBAAMzG,EAAMyG,WAAZ,CAAuB,CAAE/E,GAAI1B,EAAMyG,UAAUT,OAAS,EAAGlB,QAASgC,EAAaJ,WAAY,OAG5G,IA5BiB,2BA6Bb,OAAO,2BACA1G,GADP,IAEI2G,QAASnF,EAAOmF,UAGxB,IAjCW,qBAkCP,OAAO,2BACA3G,GADP,IAEI4G,OAAQpF,EAAOoF,SAGvB,IAtCY,sBAuCR,OAAO,2BACA5G,GADP,IAEIyG,UAAWzG,EAAMyG,UAAUc,QAAO,SAAAC,GAAC,OAAIA,EAAE9F,IAAMF,EAAOiG,YAE9D,QACI,OAAOzH,K,kBChDnB+E,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,YAAc,4BAA4B,OAAS,uBAAuB,KAAO,uB,qFCErL3D,EAAe,CACfqG,aAAa,CACT,CAAChG,GAAI,EAAGoD,QAAS,OACjB,CAACpD,GAAI,EAAGoD,QAAS,sBACjB,CAACpD,GAAI,EAAGoD,QAAS,SAErB6C,YAAa,CACT,CAACjG,GAAI,EAAGrC,KAAM,QACd,CAACqC,GAAI,EAAGrC,KAAM,QACd,CAACqC,GAAI,EAAGrC,KAAM,YACd,CAACqC,GAAI,EAAGrC,KAAM,OACd,CAACqC,GAAI,EAAGrC,KAAM,QACd,CAACqC,GAAI,EAAGrC,KAAM,QACd,CAACqC,GAAI,EAAGrC,KAAM,UAmBTuI,EAA2B,SAACC,GACrC,MAAO,CACHpG,KArCa,uBAsCboG,mBAKO5F,IAvBQ,WAAmC,IAAlCjC,EAAiC,uDAAzBqB,EAAcG,EAAW,uCACrD,OAAOA,EAAOC,MACV,IAtBa,uBAuBT,IAAIqG,EAAatG,EAAOqG,eACxB,OAAO,2BACA7H,GADP,IAEI0H,aAAa,GAAD,mBAAO1H,EAAM0H,cAAb,CAA2B,CAAChG,GAAI1B,EAAM0H,aAAa1B,OAAO,EAAGlB,QAASgD,OAI1F,QACI,OAAO9H,K,gUC/BN+H,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAM9H,KAAI,SAAAkI,GACb,OAAIA,EAAEF,KAAiBD,EACZ,2BAAIG,GAAMD,GAEdC,MCFTC,EAAS,eAQXhH,EAAe,CACfiH,MAAO,GACPC,SAAU,IACVC,gBAAiB,EACjBC,YAAa,EACbrD,YAAY,EACZsD,eAAgB,IAgEPC,EAAe,SAACjH,GACzB,MAAO,CACHD,KAAM4G,EACNnD,OAAQxD,IAIHkH,EAAkB,SAAClH,GAC5B,MAAO,CACHD,KAtFS,iBAuFTyD,OAAQxD,IASHmH,EAAiB,SAACC,GAC3B,MAAO,CACHrH,KAhGiB,yBAiGjBgH,YAAaK,IASRC,EAAgB,SAAC3D,GAC1B,MAAO,CACH3D,KA1GmB,2BA2GnB2D,WAAYA,IAGP4D,EAAuB,SAAC5D,EAAYF,GAC7C,MAAO,CACHzD,KA/GuB,+BAgHvB2D,WAAYA,EACZF,OAAQA,IASH+D,EAAW,SAACH,EAAMP,GAC3B,8CAAO,WAAO3E,GAAP,eAAA2B,EAAA,6DACH3B,EAASmF,GAAc,IACvBnF,EAASiF,EAAeC,IAFrB,SAIc7B,IAASiC,YAAYJ,EAAMP,GAJzC,OAIC5C,EAJD,OAMH/B,EAASmF,GAAc,IACvBnF,EA5CG,CACHnC,KA3FU,kBA4FV6G,MA0CkB3C,EAAKqC,QACvBpE,EAjCG,CACHnC,KArGsB,8BAsGtB0H,WA+B4BxD,EAAKwD,aAR9B,2CAAP,uDAaEC,EAAkB,uCAAG,WAAOxF,EAAUsB,EAAQmE,EAAWC,GAApC,SAAA/D,EAAA,6DACvB3B,EAASoF,GAAqB,EAAM9D,IADb,SAEFmE,EAAUnE,GAFR,OAGU,IAHV,OAGVS,KAAKC,YACdhC,EAAS0F,EAAcpE,IAE3BtB,EAASoF,GAAqB,EAAO9D,IANd,2CAAH,4DAUXqE,EAAa,SAACrE,GACvB,8CAAO,WAAOtB,GAAP,SAAA2B,EAAA,sDACH6D,EAAmBxF,EAAUsB,EAAQ+B,IAASuC,YAAYC,KAAKxC,KAAW2B,GADvE,2CAAP,uDAMSc,EAAW,SAACxE,GACrB,8CAAO,WAAOtB,GAAP,SAAA2B,EAAA,sDACH6D,EAAmBxF,EAAUsB,EAAQ+B,IAAS0C,UAAUF,KAAKxC,KAAW0B,GADrE,2CAAP,uDASWxG,IAxJM,WAAmC,IAAlCnC,EAAiC,uDAAzBqB,EAAcG,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAK4G,EACD,OAAO,2BACCrI,GADR,IAEIsI,MAAOP,EAAoB/H,EAAMsI,MAAO9G,EAAO0D,OAAQ,KAAM,CAAC0E,UAAU,MAShF,IA9BS,iBA+BL,OAAO,2BACC5J,GADR,IAEIsI,MAAOP,EAAoB/H,EAAMsI,MAAO9G,EAAO0D,OAAQ,KAAM,CAAC0E,UAAU,MAShF,IAzCU,kBA0CN,OAAO,2BACA5J,GADP,IAEIsI,MAAM,YAAK9G,EAAO8G,SAG1B,IA9CiB,yBA+Cb,OAAO,2BACAtI,GADP,IAEIyI,YAAajH,EAAOiH,cAG5B,IAnDsB,8BAoDlB,OAAO,2BACAzI,GADP,IAEIwI,gBAAiBhH,EAAO2H,aAGhC,IAxDmB,2BAyDf,OAAO,2BACAnJ,GADP,IAEIoF,WAAY5D,EAAO4D,aAG3B,IA7DuB,+BA8DnB,OAAO,2BACApF,GADP,IAEI0I,eAAgBlH,EAAO4D,WAAP,sBAAwBpF,EAAM0I,gBAA9B,CAA8ClH,EAAO0D,SAAUlF,EAAM0I,eAAenB,QAAO,SAAA7F,GAAE,OAAGA,GAAMF,EAAO0D,YAGrI,QACI,OAAOlF,K,mBC7EnB+E,EAAOC,QAAU,IAA0B,oC,+BCA3C,kHAEI6E,EAAgBC,SAAa,CAC7BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINhD,EAAW,CACpBiC,YADoB,SACRT,EAAaF,GACrB,OAAOsB,EAAcK,IAAd,qBAAgCzB,EAAhC,kBAAqDF,IACnDtE,MAAK,SAAAyB,GAAQ,OAAIA,EAASC,SAEvCgE,UALoB,SAKVzE,GACN,OAAO2E,EAAcM,KAAd,iBAA6BjF,KAExCsE,YARoB,SAQRtE,GACR,OAAO2E,EAAcO,OAAd,iBAA+BlF,KAE1CgC,WAXoB,SAWThC,GAEP,OADAL,QAAQwF,KAAK,iDACNjD,EAAWF,WAAWhC,KAIxBkC,EAAa,CACtBF,WADsB,SACXhC,GACP,OAAO2E,EAAcK,IAAd,kBAA6BhF,KAExCiC,cAJsB,SAIRjC,GACV,OAAO2E,EAAcK,IAAd,yBAAoChF,KAE/CoC,aAPsB,SAOTV,GACT,OAAOiD,EAAcS,IAAd,iBAAoC,CAAE1D,OAAQA,MAIhDpB,EAAU,CACnBC,GADmB,WAEf,OAAOoE,EAAcK,IAAd,YAEXnJ,MAJmB,SAIboE,EAAOU,GAA4B,IAAlBC,EAAiB,wDACpC,OAAO+D,EAAcM,KAAd,aAAiC,CAAChF,QAAOU,WAAUC,gBAE9DjF,OAPmB,WAQf,OAAOgJ,EAAcO,OAAd,kB","file":"static/js/main.f99868f4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport style from './Feed.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\n\r\nconst Feed = (props) =>{\r\n    return (\r\n        <div>\r\n            Feed\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport style from './Music.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\n\r\nconst Music = (props) =>{\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Settings.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\n\r\nconst Settings = (props) =>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport classes from './BestFriends.module.css';\r\n\r\n\r\n\r\nconst BestFriends = (props) => {\r\n    \r\n    return (\r\n       <div className={classes.friend}>\r\n           <img src={props.imgSrc} alt=\"\"/>\r\n           <div className={classes.name}>\r\n                {props.name}\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\nexport default BestFriends;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport BestFriends from './BestFriends/BestFriends';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/profile\">Profile</NavLink>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/dialogs\">Messages</NavLink>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/feed\">Feed</NavLink>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/music\">Music</NavLink>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/settings\">Setting</NavLink>\r\n            <NavLink activeClassName={classes.active} className={classes.item} to=\"/users\">Users</NavLink>\r\n            <div className={classes.bestfriends}>\r\n                {props.friendElements}\r\n            </div>\r\n        </nav>);\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport BestFriends from './BestFriends/BestFriends';\r\nimport Navbar from './Navbar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n// const NavbarContainer = (props) => {\r\n//     let friendElements = props.store.getState().sidebar.bestfriends.map((f) => {\r\n//         return <BestFriends name={f.name} imgSrc={f.img} />\r\n//     });\r\n//     return <Navbar friendElements={friendElements}/>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        friendElements: state.sidebar.bestfriends.map((f) => {\r\n            return <BestFriends name={f.name} imgSrc={f.img} />\r\n        })\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = () =>{\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport classes from'./Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) =>{\r\n    return (\r\n        <header className={classes.header}>\r\n            <img className={classes.logo} src=\"https://i2.wp.com/nopcproblem.ru/wp-content/uploads/2019/05/discord-logo.png?ssl=1\" />\r\n            <div className={classes.right}>\r\n                <div className={classes.loginBlock}>\r\n                    {props.isAuth ? \r\n                    <div className=\"\">\r\n                        <button className={classes.logoutBtn} onClick={props.logout}>Logout</button>\r\n                        <span className={classes.auth}>{props.login}</span> \r\n                    </div> : \r\n                    <NavLink to={'/login'}><span>Login</span></NavLink>}\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n\r\n            \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\n\r\n\r\nclass HeaderAPIContainer extends React.Component{\r\n   \r\n    render(){\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport const HeaderContainer = connect(mapStateToProps,{\r\n    logout\r\n})(HeaderAPIContainer);","import { authMe } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'app/SET-INITIALIZED';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZED:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            } \r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    \r\n    Promise.all([promise]).then(()=> {\r\n        dispatch(initializedSuccess());\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport default appReducer;","\r\n let initialState = {\r\n    bestfriends:[\r\n        {id:1, name: \"John\", img: 'https://pbs.twimg.com/profile_images/438132278318071808/qIJjSA3h.jpeg'},\r\n        {id:2, name: \"Margaret\", img: 'https://yt3.ggpht.com/a/AGF-l78BBd8rWUJ6QL5hINMuCK-A_lbuuC4pYCjBzQ=s900-c-k-c0xffffffff-no-rj-mo'},\r\n        {id:3, name: \"Shon\", img: 'https://irs3.4sqi.net/img/general/original/40701818_TB6Ybm5jjWuRNjoyakIqTZPWQ6wf7WfngTUwyn2Vn3U.jpg'}\r\n    ]\r\n }\r\n\r\nconst sidebarReducer = (state=initialState, action) => {\r\n    \r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducersPatch = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n  \r\nlet store = createStore(reducersPatch, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React, { Suspense } from \"react\";\r\n\r\nexport const withSuspenseComponent = (Component) => {\r\n    return (props) => {\r\n        return<Suspense fallback={<div>Loading...</div>}> \r\n        <Component {...props} /> \r\n    </Suspense>\r\n    }\r\n     \r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Route, withRouter, BrowserRouter } from 'react-router-dom';\r\nimport Feed from './components/Feed/Feed';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport { HeaderContainer } from './components/Header/HeaderContainer';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { withSuspenseComponent } from './hoc/withSuspenseComponent';\r\n\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized){  \r\n            return <Preloader/>\r\n        }\r\n        \r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer />\r\n                <NavbarContainer />\r\n                <div className=\"app-wrapper__content\">\r\n                    <Route path=\"/profile/:userId?\" render={withSuspenseComponent(ProfileContainer)} />\r\n                    <Route path=\"/dialogs\" render={withSuspenseComponent(DialogsContainer)}/>\r\n                    <Route path=\"/feed\" component={Feed} />\r\n                    <Route path=\"/music\" component={Music} />\r\n                    <Route path=\"/settings\" component={Settings} />\r\n                    <Route path=\"/users\" render={withSuspenseComponent(UsersContainer)} />\r\n                    <Route path=\"/login\" render={withSuspenseComponent(Login)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n\r\n                <AppContainer />\r\n\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default MainApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport  MainApp  from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3hRcQ\",\"logo\":\"Header_logo__3jc6s\",\"right\":\"Header_right__1YWmB\",\"search__input\":\"Header_search__input__3qEFf\",\"search__btn\":\"Header_search__btn__1nCkf\",\"loginBlock\":\"Header_loginBlock__16aIr\",\"logoutBtn\":\"Header_logoutBtn__3_Zky\",\"auth\":\"Header_auth__bsE7D\"};","import { authAPI } from \"../API/API\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.payload\r\n            } \r\n    \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\n\r\nexport const authMe = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me();\r\n        \r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n            \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authMe())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error'\r\n            dispatch(stopSubmit('login', {_error: message})); \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n            \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"BestFriends_friend__2Jw0J\",\"name\":\"BestFriends_name__1zMn1\"};","import React from 'react';\r\nimport loaderSrc from '../../../assads/image/loader.svg';\r\n\r\nconst Preloader = () => {\r\n    return <div style={{textAlign: 'center'}}><img src={loaderSrc} width='100px' height='100px' /></div>\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","import { usersAPI, profileAPI } from '../API/API';\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE';\r\nconst SET_STATUS = 'profile/SET-STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: \"I think it's great!\", likesCount: 35 },\r\n        { id: 2, message: \"Hi! how are you?\", likesCount: 27 },\r\n        { id: 3, message: \"I'm gonna sleep, who with me?\", likesCount: 27 },\r\n        { id: 4, message: \"Today is sunny\", likesCount: 27 },\r\n        { id: 5, message: \"I think, I have wil great anything.\", likesCount: 27 },\r\n        { id: 6, message: \"Hi! how are you?\", likesCount: 27 },\r\n        { id: 7, message: \"It's my first postaret\", likesCount: 58 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPostText = action.newPostText;\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: state.postsData.length + 1, message: newPostText, likesCount: 0 }]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id != action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserProfileTC = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.profileDAL(userId)\r\n\r\n        dispatch(setUserProfile(response.data));\r\n\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getUserStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3MGhH\",\"item\":\"Navbar_item__30KQz\",\"active\":\"Navbar_active__2oiUg\",\"bestfriends\":\"Navbar_bestfriends__2XM03\",\"friend\":\"Navbar_friend__1_gvn\",\"name\":\"Navbar_name__2wX_p\"};","const SEND_MASSEGE = 'dialogs/SEND-MASSAGE';\r\n\r\n\r\nlet initialState = {\r\n    messagesData:[\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"How is your ReacT!\"},\r\n        {id: 3, message: \"You!\"}\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: \"John\"},\r\n        {id: 2, name: \"Kate\"},\r\n        {id: 3, name: \"Margaret\"},\r\n        {id: 4, name: \"Ken\"},\r\n        {id: 5, name: \"Buch\"},\r\n        {id: 6, name: \"Jack\"},\r\n        {id: 7, name: \"Rosa\"}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SEND_MASSEGE:\r\n            let newMessage = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messagesData: [ ...state.messagesData, {id: state.messagesData.length+1, message: newMessage} ]\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMassegeActionCreator = (newMessageText) =>{\r\n    return {\r\n        type: SEND_MASSEGE,\r\n        newMessageText\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from '../API/API';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FETCH_FOLLOWING = 'users/TOGGLE-FETCH-FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    fetchFollowing: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ... state, \r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId){\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n        \r\n        case UNFOLLOW:\r\n            return {\r\n                ... state, \r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId){\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return { \r\n                ...state, \r\n                users: [...action.users]\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { \r\n                ...state, \r\n                currentPage: action.currentPage\r\n            };\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { \r\n                ...state, \r\n                totalUsersCount: action.totalCount\r\n            };\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return { \r\n                ...state, \r\n                isFetching: action.isFetching\r\n            };\r\n\r\n        case TOGGLE_FETCH_FOLLOWING:\r\n            return { \r\n                ...state, \r\n                fetchFollowing: action.isFetching ? [...state.fetchFollowing, action.userId] : state.fetchFollowing.filter(id=> id != action.userId)\r\n            };\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess =(id) =>{\r\n    return {\r\n        type: FOLLOW,\r\n        userId: id\r\n    }\r\n}\r\n\r\nexport const unFollowSuccess = (id) =>{\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: id\r\n    }\r\n}\r\nexport const setUsers = (users) =>{\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPage = (page) =>{\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: page\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalCount) =>{\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount: totalCount\r\n    }\r\n}\r\nexport const setIsFetching = (isFetching) =>{\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const toggleFetchFollowing = (isFetching, userId) =>{\r\n    return {\r\n        type: TOGGLE_FETCH_FOLLOWING,\r\n        isFetching: isFetching,\r\n        userId: userId\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsersDAL(page, pageSize);\r\n\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }      \r\n} \r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFetchFollowing(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFetchFollowing(false, userId));\r\n}\r\n\r\n\r\nexport const unFollowTC = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollowDAL.bind(usersAPI), unFollowSuccess);\r\n    }     \r\n} \r\n\r\n\r\nexport const followTC = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followDAL.bind(usersAPI), followSuccess);\r\n    }     \r\n} \r\n\r\n \r\n\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/loader.1ae12dd4.svg\";","import * as axios from 'axios';\r\n\r\nlet axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": '2b52991b-73ae-48c7-b55e-39dce8d4e14a'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsersDAL(currentPage, pageSize){\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n    },\r\n    followDAL(userId) {\r\n        return axiosInstance.post(`follow/${userId}`)\r\n    },\r\n    unFollowDAL(userId) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n    },\r\n    profileDAL(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.profileDAL(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    profileDAL(userId) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId){\r\n        return axiosInstance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return axiosInstance.put(`profile/status` ,{ status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return axiosInstance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return axiosInstance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return axiosInstance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}