{"version":3,"sources":["components/common/formsControls/formsControls.module.css","components/common/formsControls/formsControls.jsx","utils/validators/validator.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","Element","input","meta","props","showError","touched","error","className","style","formControl","createField","placeholder","name","component","validators","text","validate","requireField","value","maxLengthCreator","maxLength","length","Input","ReduxLoginForm","reduxForm","form","handleSubmit","onSubmit","action","type","formAllError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,aAAe,sC,6JCG1GC,EAAc,SAAAC,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE3DC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,yBAAKC,UAAS,UAAKC,IAAMC,YAAX,YAA0BL,EAAYI,IAAMF,MAAQ,KAC9D,kBAACN,EAAD,iBAAaC,EAAWE,IACvBC,GAAa,8BAAOF,EAAKI,UAKzBI,EAAc,SAACC,EAAaC,EAAMC,EAAWC,EAAYX,EAAOY,GACzE,OACI,yBAAKR,UAAU,IACX,kBAAC,IAAD,eAAOS,SAAUF,EACbD,UAAWA,EACXD,KAAMA,EACND,YAAaA,GACTR,IALZ,IAKuBY,K,iCCtB/B,oEAAO,IAAME,EAAe,SAACC,GACzB,IAAGA,EACH,MAAO,yBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAACF,GAC1C,GAAGA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCN1C,+FAUME,EAAQvB,YAAY,SAsCpBwB,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EApCL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcpB,EAAW,EAAXA,MAE9B,OACQ,0BAAMqB,SAAUD,EAAcE,OAAO,IAEhClB,YAAY,QAAS,QAASY,EAAO,CAACL,KAAe,CAACY,KAAM,SAC5DnB,YAAY,WAAY,WAAYY,EAAO,CAACL,KAAe,CAACY,KAAM,aAClEnB,YAAY,WAAY,WAAYY,EAAO,GAAG,CAACO,KAAM,YAAa,eAElEvB,GAAS,yBAAKC,UAAWC,IAAMsB,cAAexB,GAE/C,yBAAKC,UAAU,IACX,8CAgCLwB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CACpCE,WADWJ,EAzBD,SAAC5B,GAKX,OAAIA,EAAM8B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGrB,yBAAK7B,UAAU,IACX,qCACA,kBAACgB,EAAD,CAAgBI,SAVP,SAACU,GACdlC,EAAMgC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.87945e87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__O9qF4\",\"error\":\"formsControls_error__2mgha\",\"formAllError\":\"formsControls_formAllError__26MDX\"};","import React from 'react';\r\nimport style from './formsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const FormControl = Element => ({ input, meta, ...props }) => {\r\n\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formControl} ${showError ? style.error : \"\"}`}>\r\n            <Element {...input} {...props} />\r\n            {showError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props, text) => {\r\n    return (\r\n        <div className=\"\">\r\n            <Field validate={validators}\r\n                component={component}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                {...props} /> {text}\r\n        </div>\r\n    );\r\n\r\n}","export const requireField = (value) => {\r\n    if(value) return undefined\r\n    return \"This is Require Field\"\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nimport { requireField } from '../../utils/validators/validator';\r\nimport { FormControl, createField } from '../common/formsControls/formsControls';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/formsControls/formsControls.module.css'\r\n\r\nconst Input = FormControl('input');\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit} action=\"\">\r\n        \r\n                {createField('Email', 'email', Input, [requireField], {type: \"text\"} )}\r\n                {createField('Password', 'password', Input, [requireField], {type: \"password\"} )}\r\n                {createField('Password', 'password', Input, [],{type: \"checkbox\"}, \"Remember Me\" )}\r\n\r\n                {error && <div className={style.formAllError}>{error}</div>}\r\n                \r\n                <div className=\"\">\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <h1>Login</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login' \r\n  })(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    login \r\n})(Login);"],"sourceRoot":""}