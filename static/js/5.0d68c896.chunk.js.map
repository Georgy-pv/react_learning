{"version":3,"sources":["components/common/formsControls/formsControls.module.css","components/common/formsControls/formsControls.jsx","utils/validators/validator.js","hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","Element","input","meta","props","showError","touched","error","className","style","formControl","createField","placeholder","name","component","validators","text","validate","requireField","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","activeClassName","active","dialog","id","Message","message","maxLength100","Textarea","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogs","dialogsItems","dialogsElements","messages","messagesElements","values","sendMassege","newMessageText","compose","dialogsPage","dialogsData","map","d","key","messagesData","m","dispatch","action","sendMassegeActionCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,aAAe,sC,6JCG1GC,EAAc,SAAAC,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE3DC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACI,yBAAKC,UAAS,UAAKC,IAAMC,YAAX,YAA0BL,EAAYI,IAAMF,MAAQ,KAC9D,kBAACN,EAAD,iBAAaC,EAAWE,IACvBC,GAAa,8BAAOF,EAAKI,UAKzBI,EAAc,SAACC,EAAaC,EAAMC,EAAWC,EAAYX,EAAOY,GACzE,OACI,yBAAKR,UAAU,IACX,kBAAC,IAAD,eAAOS,SAAUF,EACbD,UAAWA,EACXD,KAAMA,EACND,YAAaA,GACTR,IALZ,IAKuBY,K,iCCtB/B,oEAAO,IAAME,EAAe,SAACC,GACzB,IAAGA,EACH,MAAO,yBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAACF,GAC1C,GAAGA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,sICFtCE,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK1B,MAAMqB,OAGT,kBAACG,EAAcE,KAAK1B,OAFhB,kBAAC,IAAD,CAAU2B,GAAI,eALU,GAEXC,IAAMJ,WAWtC,OAFiCK,YAAQV,EAARU,CAAoCJ,K,oBClBzE/B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCYpMmC,EATI,SAAC9B,GAChB,OACI,6BACG,kBAAC,IAAD,CAAS+B,gBAAiB1B,IAAM2B,OAAQ5B,UAAWC,IAAM4B,OAAQN,GAAI,YAAc3B,EAAMkC,IAAKlC,EAAMS,QCGhG0B,EALC,SAACnC,GACb,OAAO,yBAAKI,UAAWC,IAAM+B,SAAUpC,EAAMoC,U,4CCA3CC,EAAerB,YAAiB,KAChCsB,EAAW1C,YAAY,YAoCvB2C,EAAsBC,YAAU,CAClCC,KAAM,oBADkBD,EAZL,SAACxC,GACpB,OACI,0BAAM0C,SAAU1C,EAAM2C,cAClB,kBAACC,EAAA,EAAD,CAAOlC,UAAW4B,EAClBzB,SAAU,CAACC,IAAcuB,GACzB5B,KAAK,iBACLD,YAAY,uBACZ,8CASGqC,EAtCC,SAAC7C,GAMb,OACI,yBAAKI,UAAWC,IAAMyC,SAClB,yBAAK1C,UAAWC,IAAM0C,cACjB/C,EAAMgD,iBAEX,yBAAK5C,UAAWC,IAAM4C,UACjBjD,EAAMkD,iBACP,yBAAK9C,UAAU,eACZ,kBAACmC,EAAD,CAAqBG,SAZhB,SAACS,GACjBnD,EAAMoD,YAAYD,EAAOE,uB,yBCsBlBC,sBACXzB,aAxBkB,SAACT,GACnB,MAAO,CACHmC,YAAanC,EAAMmC,YACnBP,gBAAiB5B,EAAMmC,YAAYC,YAAYC,KAAI,SAACC,GAChD,OAAO,kBAAC,EAAD,CAAYC,IAAKD,EAAExB,GAAIzB,KAAMiD,EAAEjD,KAAMyB,GAAIwB,EAAExB,QAEtDgB,iBAAkB9B,EAAMmC,YAAYK,aAAaH,KAAI,SAACI,GAClD,OAAO,kBAAC,EAAD,CAASF,IAAKE,EAAE3B,GAAIE,QAASyB,EAAEzB,iBAMzB,SAAC0B,GACtB,MAAO,CACHV,YAAa,SAACC,GACV,IAAIU,EAASC,YAAyBX,GACtCS,EAASC,QAQjBxC,IAFW+B,CAGbT","file":"static/js/5.0d68c896.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__O9qF4\",\"error\":\"formsControls_error__2mgha\",\"formAllError\":\"formsControls_formAllError__26MDX\"};","import React from 'react';\r\nimport style from './formsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const FormControl = Element => ({ input, meta, ...props }) => {\r\n\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formControl} ${showError ? style.error : \"\"}`}>\r\n            <Element {...input} {...props} />\r\n            {showError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props, text) => {\r\n    return (\r\n        <div className=\"\">\r\n            <Field validate={validators}\r\n                component={component}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                {...props} /> {text}\r\n        </div>\r\n    );\r\n\r\n}","export const requireField = (value) => {\r\n    if(value) return undefined\r\n    return \"This is Require Field\"\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth){\r\n                return <Redirect to={'/login'}/>;\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hjnO\",\"dialogsItems\":\"Dialogs_dialogsItems__2rPfP\",\"active\":\"Dialogs_active__1E41I\",\"dialog\":\"Dialogs_dialog__2hH4z\",\"messages\":\"Dialogs_messages__2nF01\",\"message\":\"Dialogs_message__35Xxh\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div >\r\n           <NavLink activeClassName={style.active} className={style.dialog} to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\n\r\n\r\n\r\nconst Message = (props) =>{\r\n    return <div className={style.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';  // импорт css в виде объекта, ключами которого являются классы\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { FormControl } from '../common/formsControls/formsControls';\r\nimport { requireField, maxLengthCreator } from '../../utils/validators/validator';\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst Textarea = FormControl('textarea')\r\n\r\nconst Dialogs = (props) =>{\r\n\r\n    let addNewMessage = (values) =>{\r\n        props.sendMassege(values.newMessageText);\r\n    }\r\n    \r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {props.dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {props.messagesElements}\r\n                <div className=\"add_massege\">\r\n                   <AddMessageReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field component={Textarea} \r\n            validate={[requireField, maxLength100]}\r\n            name=\"newMessageText\" \r\n            placeholder=\"Enter your message\" />\r\n            <button>Send M</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogAddmessage'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { sendMassegeActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        dialogsElements: state.dialogsPage.dialogsData.map((d) => {\r\n            return <DialogItem key={d.id} name={d.name} id={d.id} />\r\n        }),\r\n        messagesElements: state.dialogsPage.messagesData.map((m) => {\r\n            return <Message key={m.id} message={m.message} />\r\n        }),\r\n    }\r\n    \r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMassege: (newMessageText) => {\r\n            let action = sendMassegeActionCreator(newMessageText);\r\n            dispatch(action);\r\n        },\r\n        \r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}